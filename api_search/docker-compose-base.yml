version: "3.9"

services:
  postgres_search:
    restart: always
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
    container_name: postgres_search
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/staticfiles/backups
    networks:
      - local_network_search
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER" ]
      interval: 5s
      timeout: 10s
      retries: 5

  elastic_search:
    build:
      context: .
      dockerfile: ./docker/elastic/Dockerfile
    container_name: elastic_search
    volumes:
      - local_elastic_search_data:/usr/share/elasticsearch/data
    networks:
      - local_network_search
    healthcheck:
      test: [ "CMD", "curl", "--write-out", "'HTTP %{http_code}'",
              "--fail", "--silent", "--output", "/dev/null", "http://elastic_search:9200/" ]
      interval: 1s
      retries: 30

  redis_search:
    build:
      context: .
      dockerfile: ./docker/redis/Dockerfile
    container_name: redis_search
    networks:
      - local_network_search
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "ping", "|", "grep", "PONG" ]
      interval: 1s
      retries: 30

  api_search:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    container_name: api_search
    volumes:
      - local_postgres_data_backups:/app/staticfiles/backups
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
      - .:/app
    expose:
      - "8081"
    depends_on:
      elastic_search:
        condition: service_healthy
      postgres_search:
        condition: service_healthy
      redis_search:
        condition: service_healthy
    networks:
      - local_network_search
    healthcheck:
      test: [ "CMD", "curl", "--fail", "-f", "http://api_search:8081/docs" ]
      interval: 1s
      retries: 30

  nginx_search:
    restart: always
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    container_name: nginx_search
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "80:80"
    env_file:
      - .envs/.docker-compose-local/.api
    depends_on:
      - api_search
    networks:
      - local_network_search


networks:
  local_network_search:
    driver: bridge

volumes:
  local_postgres_data: { }
  local_postgres_data_backups: { }
  local_elastic_search_data: { }
  static_volume:
  media_volume:
